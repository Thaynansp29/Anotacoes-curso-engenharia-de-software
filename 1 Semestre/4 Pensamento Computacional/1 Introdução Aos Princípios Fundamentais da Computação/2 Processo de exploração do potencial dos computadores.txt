Entre códigos e algoritmos: aprendendo a lógica do computador
Vamos voltar à dinâmica do entendimento do pensamento computacional. Você está fazendo uma prova de matemática, e o conteúdo é análise combinatória; portanto, aprendeu todas as fórmulas e 
métricas, basta aplicá-las. Agora, é ler o problema e colocar tudo lá.


Se a máquina é extremamente rápida, mas muito tola, como é possível a implementação de tantos recursos úteis nos computadores?
 
E na hora surge uma dúvida:

“É uma combinação simples ou com repetição? Não sei, eu só aprendi que essa é a fórmula. Não basta apenas colocar os números, e o resultado será alcançado?”.

Claro que não! Uma fórmula é uma simplificação, e cada um de seus elementos só tem sentido se for observado dentro de um contexto. Demos o exemplo matemático, porém a matemática é apenas 
uma leitura da vida.

Imagine um motorista que condicionou o seguinte: sinal (farol) amarelo é para parar. Porém, no trânsito, nem todos pensam da mesma forma. Logo, se esse motorista vê um sinal amarelo e para,
pode ser que o condutor que vem atrás, por não pensar como ele, não consiga frear. O resultado é a colisão. O ponto é que, para que um computador execute o que você deseja, ele precisa de 
informações, padrões e leituras, pois só assim ele será capaz de ampliar suas possibilidades de soluções.

Para compreendermos o funcionamento de um computador, precisamos entender o que é um código. Então, dentro do computador, temos um corpo de códigos, e eles são apenas uma série de 
instruções, por exemplo: adicione dias e medidas e compare-os. Você se lembra da equação fundamental, não é mesmo?

Um computador corresponde à incapacidade de pensar à velocidade X. Então, o trabalho da máquina consiste em apenas uma série de instruções; ela só executa o que é pedido na ordem em que 
recebeu as orientações de quem escreveu o código. O computador é capaz de passar por uma sequência de instruções de uma forma incrivelmente rápida. Quem pensa e estrutura, podendo ser cada
vez mais complexo ou simples, é o sujeito que programa.

Há uma série de instruções, e o computador apenas caminha através delas, executando cada uma exatamente como instruído. São as famosas palavras executar e rodar, como você já deve ter 
ouvido. Então, sim, um código é executado de forma muitíssimo rápida, mas as instruções individuais são bastante simples, o que leva a uma pergunta natural:

Se essas instruções são tão simples, como podemos ter um recurso útil? Ou seja, como tornar o computador capaz de realizar tarefas que dependam de algum nível de inteligência e 
discernimento?

Vamos tentar algo prático. Usaremos o recurso de redução de olhos vermelhos de fotografias como um exemplo de utilidade do computador. Existem infindáveis exemplos diferentes, como enviar 
um e-mail, assistir a um vídeo on-line ou qualquer outra tarefa que executamos em nossos computadores diariamente.

Que tal, agora, pensarmos nos filtros para maquiagem? Mas isso serve para quê? Para atender aos desejos do usuário. Diverte, faz rir, aumenta a autoestima. A programação não julga, não cria
a demanda; ela atende à demanda. Embora receba as instruções e realize as tarefas, a utilidade é do usuário que precisava daquilo.


Sempre que você pensar em um código, deve imaginar o seguinte: se ele foi criado e, principalmente, se alcança um grande número potencial de utilização, não foi o computador que evoluiu, 
mas a sociedade. Alguém captou uma demanda e observou que a máquina, que a criação de um código, poderia suprir essa carência, nem que fosse fazer rir.

O que liga esses dois lados da essência de um computador: a demanda humana e a necessidade de criação de um código para alcançar a solução? A resposta é a seguinte: programadores.

Voltemos ao exemplo dos olhos vermelhos. Um programador de computador talvez tenha tido a seguinte ideia: “Seria legal se os computadores fossem capazes de reduzir os olhos vermelhos de 
fotografias, pois esse defeito é meio macabro, e eu fico desconfortável ao vê-lo”. Essa é uma ótima ideia! Trata-se de um discernimento, uma escolha humana que atende a seus anseios: 
deveríamos ter redução de olhos vermelhos. Assim, o programador de computador pensa em uma maneira de tornar isso possível. Resumidamente, temos as seguintes etapas:

O programador procura a cor vermelha na foto e, talvez, checaríamos se ela tem uma forma arredondada.

Em seguida, o programador precisa pensar em uma forma de desempenhar cada um desses passos e escrever um algoritmo em instruções tão simples, tornando possível que o computador execute cada
uma.

Ao final, o programador tem a função de redução de olhos vermelhos funcionando.

O resultado do sequenciamento de instruções compreensíveis ao computador para realizar uma dada tarefa (ex: redução de olhos vermelhos) é chamado de algoritmo.

Algoritmo

Definição:
Para usar o e-mail, assistir a um vídeo, conversar pelo WhatsApp, realizar operações bancárias, ou qualquer outro recurso útil via computador, smartphones etc., foi preciso que, em algum
momento, uma pessoa ou uma equipe pensasse: “Bem, deveríamos escrever um algoritmo para isso”.


Alguém estruturou os procedimentos necessários e, depois, transformou os passos de alto nível em instruções suficientemente simples, para que o computador ou o smartphone pudesse executá-las. Essa pessoa ou a equipe trabalhou, então, escrevendo o código para a solução. Em seguida, um bom tempo foi gasto para testar e melhorar o código, até que ele, de fato, representasse com fidelidade o algoritmo projetado originalmente.

O programador pode se concentrar em ser criativo, para, então, criar um algoritmo capaz de resolver um problema real.


Código (definição simplificada):
É um conjunto qualquer de instruções simples escrito em alguma linguagem padrão compreensível para o computador. Deve ser escrito em uma linguagem de programação padrão, senão os 
computadores não conseguirão executá-lo.
			X
Algoritmo (definição simplificada):
É um termo que reflete uma ideia mais completa, em que o conjunto de instruções possuem uma finalidade útil. Não precisa ser escrito em linguagem de computador, podendo ser escrito, por 
exemplo, em português.

